{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\n\nmetadata = {\n    \"systemName\": \"AWS-S3-Bucket\",\n    \"displayName\": \"AWS S3 Bucket\",\n    \"description\": \"Connect to your Amazon Web Services S3 Bucket.\",\n    \"configuration\": {\n        \"AWSRegion\": {\n            displayName: \"AWS Region\",\n            type: \"string\",\n            required: true\n        },\n        \"AWSBucketName\": {\n            displayName: \"AWS Bucket Name\",\n            type: \"string\",\n            required: true\n        },\n        \"AWSAccessKey\": {\n            displayName: \"AWS IAM User Access Key\",\n            type: \"string\",\n            required: true\n        },\n        \"AWSSecretKey\": {\n            displayName: \"AWS IAM User Secret Key\",\n            type: \"string\",\n            required: true\n        }\n    }\n};\n\nondescribe = async function ({configuration}): Promise<void> {\n    postSchema({\n        objects: {\n            \"bucket\": {\n                displayName: \"Bucket\",\n                description: \"Get S3 Bucket Contents\",\n                properties: {\n                    \"key\": {\n                        displayName: \"Key\",\n                        type: \"string\",\n                    },\n                    \"lastModified\": {\n                        displayName: \"Last Modified\",\n                        type: \"dateTime\"\n                    },\n                    \"eTag\": {\n                        displayName: \"Etag\",\n                        type: \"string\"\n                    },\n                    \"size\": {\n                        displayName: \"Size\",\n                        type: \"number\"\n                    },\n                    \"storageClass\": {\n                        displayName: \"Storage Class\",\n                        type: \"number\"\n                    }\n                },\n                methods: {\n                    \"getList\": {\n                        displayName: \"Get List of Bucket Contents\",\n                        type: \"list\",\n                        inputs: [\"prefix\", \"max-keys\", \"start-after\"],\n                        outputs: [\"key\", \"lastModified\", \"eTag\", \"size\", \"storageClass\"]\n                    }\n                }\n            },\n            \"file\": {\n                displayName: \"File\",\n                description: \"Manages Files on AWS S3\",\n                properties: {\n                    \"fileName\": {\n                        displayName: \"File Name\",\n                        type: \"string\"\n                    },\n                    \"size\": {\n                        displayName: \"File Size\",\n                        type: \"string\"\n                    },\n                    \"contentType\": {\n                        displayName: \"Content Type\",\n                        type: \"string\"\n                    },\n                    \"content\": {\n                        displayName: \"File Content\",\n                        type: \"attachment\"\n                    }\n                },\n                methods: {\n                    \"getFile\": {\n                        displayName: \"Get File\",\n                        type: \"read\",\n                        inputs: [ \"fileName\" ],\n                        requiredInputs: [\"fileName\"],\n                        outputs: [ \"fileName\", \"size\", \"contentType\", \"content\" ]\n                    }\n                }\n            }\n        }\n    }\n    )\n};\n\nonexecute = async function ({objectName, methodName, parameters, properties, configuration}): Promise<void> {\n    try{\n        switch (objectName) {\n            case \"bucket\": await onexecuteBucket(methodName, parameters, properties, configuration); break;\n            case \"file\": await onexecuteFile(methodName, properties, parameters); break;\n            default: throw new Error(\"The object \" + objectName + \" is not supported.\");\n        }\n    }\n    catch (e){\n        throw new Error(\"Stacktrace: \" + e.stack);\n    }\n}\n\nasync function onexecuteBucket(methodName: string, parameters: SingleRecord, properties: SingleRecord, configuration: SingleRecord): Promise<void> {\n    try{\n        switch (methodName) {\n            case \"getList\": await onexecuteBucketGetList(parameters, properties, configuration); break;\n            default: throw new Error(\"The method \" + methodName + \" is not supported.\");\n        }\n    }\n    catch (e){\n        throw new Error(\"Stacktrace: \" + e.stack);\n    }\n}\n\nasync function onexecuteFile(methodName: string, properties: SingleRecord, parameters: SingleRecord): Promise<void> {\n    try{\n        switch (methodName)\n        {\n            case \"getFile\": await onexecuteGetFile(parameters, properties); break;\n            default: throw new Error(\"The method \" + methodName + \" is not supported.\");\n        }\n    }\n    catch (e){\n        throw new Error(\"Stacktrace: \" + e.stack);\n    }\n}\n\nfunction onexecuteBucketGetList(parameters: SingleRecord, properties: SingleRecord, configuration: SingleRecord): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        try{\n            var xhr = new XMLHttpRequest();\n            xhr.withCredentials = true;\n        }\n        catch (e){\n            console.log(\"Stacktrace: \" + e.stack);\n        }\n\n        xhr.onreadystatechange = function () {\n            try {\n                if (xhr.readyState !== 4) return;\n                if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\n\n                //Debug\n                console.log('-----------------------');\n                console.log('xhr.status: ' + xhr.status);\n                console.log('xhr.responseText: ' + xhr.responseText);\n                console.log('-----------------------');\n\n                var obj = JSON.parse(xhr.responseText);\n                postResult(obj.map(x => {\n                    return {\n                        \"key\": x.ListBucketResult.Contents.Key,\n                        \"lastModified\": x.ListBucketResult.Contents.LastModified,\n                        \"etag\": x.ListBucketResult.Contents.Etag,\n                        \"size\": x.ListBucketResult.Contents.Size,\n                        \"storageClass\": x.ListBucketResult.Contents.StorageClass\n                    }\n                }));\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        }\n\n        var amzDate = getAmzDate(new Date().toISOString());\n        var authDate = amzDate.split(\"T\")[0];\n\n        xhr.open(\"GET\", 'https://' + configuration[\"AWSBucketName\"] + '.s3.' + configuration[\"AWSRegion\"] + '.amazonaws.com?list-type=2&max-keys=50&prefix=Images&start-after=1');\n        \n        // Option 1 per AWS Documentation\n        xhr.setRequestHeader(\"host\", configuration[\"AWSBucketName\"] + \".s3.amazonaws.com\");\n        xhr.setRequestHeader(\"X-Amz-Algorithm\", \"AWS4-HMAC-SHA256\");\n        xhr.setRequestHeader(\"X-Amz-Date\", amzDate);\n        xhr.setRequestHeader(\"X-Amz-Credential\", configuration['AWSAccessKey'] + \"/\" + authDate + \"/s3/\" + configuration[\"AWSRegion\"]);\n        xhr.setRequestHeader(\"X-Amz-Signature\", getSignatureKey(configuration, authDate));\n        xhr.setRequestHeader(\"X-Amz-Content-Sha256\", getPayload(''));\n\n        // Option 2 - More like Postman\n        // xhr.setRequestHeader(\"host\", configuration[\"AWSBucketName\"] + \".s3.amazonaws.com\");\n        // xhr.setRequestHeader(\"X-Amz-Content-Sha256\", getPayload(''));\n        // xhr.setRequestHeader(\"X-Amz-Date\", amzDate);\n        // xhr.setRequestHeader(\"Authorization\", \n        //     \"AWS4-HMAC-SHA256 Credential=\" + \n        //     configuration[\"AWSAccessKey\"] + \"/\" + \n        //     authDate + \"/\" + \n        //     configuration[\"AWSRegion\"] + \n        //     \"/s3/aws4_request, SignedHeaders=host;x-amz-date, Signature=\" + \n        //     getSignatureKey(configuration, authDate));\n\n        xhr.send();\n    });\n\n            // \"/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=\" + \n}\n\nfunction getAmzDate(dateStr) {\n    var chars = [\":\",\"-\"];\n    for (var i=0;i<chars.length;i++) {\n        while (dateStr.indexOf(chars[i]) != -1) {\n            dateStr = dateStr.replace(chars[i],\"\");\n        }\n    }\n    dateStr = dateStr.split(\".\")[0] + \"Z\";\n    console.log('dateStr: ' + dateStr);\n    return dateStr;\n}\n\nfunction getPayload(payload) {\n    var crypto = require(\"crypto-js\");\n\n    return crypto.SHA256(payload).toString(payload);\n}\n\nfunction getSignatureKey(configuration, dateString) {\n    \n    var crypto = require(\"crypto-js\");\n\n    var kDate = crypto.HmacSHA256(dateString, \"AWS4\" + configuration[\"AWSSecretKey\"]);\n    var kRegion = crypto.HmacSHA256(configuration[\"AWSRegion\"], kDate);\n    var kService = crypto.HmacSHA256('s3', kRegion);\n    var kSigning = crypto.HmacSHA256(\"aws4_request\", kService);\n    return kSigning;\n}\n\nfunction onexecuteGetFile(parameters: SingleRecord, properties: SingleRecord): Promise<void> {\n    return new Promise<void>((resolve, reject) =>\n    {\n        console.log('===htk in onexecuteGetFile');\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function() {\n            try {\n                \n                //console.log('=== htk readyState '+ xhr.readyState);\n                //console.log('=== htk status '+ xhr.status);\n\n                if (xhr.readyState !== 4) return;\n                if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\n\n                console.log('=== hdr '+xhr.getResponseHeader('Content-Type'));\n                console.log('=== len '+xhr.getResponseHeader('Content-Length'));\n                console.log('===  file '+ xhr.response);\n\n                postResult({\n                    \"fileName\": properties[\"fileName\"],\n                    \"size\": xhr.getResponseHeader('Content-Length'),\n                    \"contentType\": xhr.getResponseHeader('Content-Type'),\n                    \"content\": xhr.response\n                });\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        //xhr.setRequestHeader('test', 'test value');\n        console.log(\"=== fn \"+properties[\"fileName\"]);\n        xhr.open(\"GET\", 'https://k2-public-bucket.s3.us-west-2.amazonaws.com/Images/IDontThinkThatMemes.jpg');\n        xhr.responseType = 'blob';\n\n        xhr.send();\n    });\n}\n\nfunction onexecuteTodoGetWithParams(parameters: SingleRecord): Promise<void> {\n    return new Promise<void>((resolve, reject) =>\n    {\n        try {\n            postResult({\n                \"id\": parameters[\"pid\"]\n            });\n            resolve();\n        } catch (e) {\n            reject(e);\n        }\n        \n    });\n}"],"names":["metadata","displayName","type","required","ondescribe","configuration","postSchema","objects","description","properties","methods","inputs","outputs","requiredInputs","onexecute","objectName","methodName","parameters","onexecuteBucket","onexecuteFile","Error","e","stack","onexecuteBucketGetList","onexecuteGetFile","Promise","resolve","reject","xhr","XMLHttpRequest","withCredentials","console","log","onreadystatechange","readyState","status","responseText","obj","JSON","parse","postResult","map","x","ListBucketResult","Contents","Key","LastModified","Etag","Size","StorageClass","amzDate","getAmzDate","Date","toISOString","authDate","split","open","setRequestHeader","getSignatureKey","getPayload","send","dateStr","chars","i","length","indexOf","replace","payload","crypto","require","SHA256","toString","dateString","kDate","HmacSHA256","kRegion","kService","kSigning","getResponseHeader","response","responseType"],"mappings":"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"}